name: CI

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup Node.js environment
      uses: actions/setup-node@v4.0.0
      with:
        node-version: 20.x

    # Instalar dependências Yarn
    - name: Install dependencies
      run: yarn

    # Executar build
    - name: Run build
      run: yarn build
    
    # Copiar código para dentro da Digital Ocean
    - name: Copy dist to Digital Ocean
      uses: appleboy/scp-action@v0.1.3
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        source: ".,!node_modules"
        target: "~/app/AdopetCP-Backend"

    # Executar "yarn" na Digital Ocean
    - name: Install dependencies on Digital Ocean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: cd ~/app/AdopetCP-Backend && yarn

    # Executar as migrations
    - name: Run migrations on Digital Ocean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: cd ~/app/AdopetCP-Backend && ./node_modules/.bin/typeorm migration:run

    # Restart no servidor Node.js
    - name: Run migrations on Digital Ocean
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USER }}
        port: ${{ secrets.SSH_PORT }}
        key: ${{ secrets.SSH_KEY }}
        script: pm2 restart adopet-api
    
